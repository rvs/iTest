<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
      <groupId>com.cloudera.itest</groupId>
      <artifactId>smoke-tests</artifactId>
      <version>1.0-SNAPSHOT</version>
  </parent>
  <groupId>com.cloudera.itest</groupId>
  <artifactId>hadoopsmokes</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>hadoopsmokes</name>

  <properties>
    <hadoopsmoke.copy>${project.build.directory}/hadoopsmoke.jar</hadoopsmoke.copy>
    <hadoopsmoke.ver>1.0-SNAPSHOT</hadoopsmoke.ver>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.cloudera.itest</groupId>
      <artifactId>hadoopsmoke</artifactId>
      <version>${hadoopsmoke.ver}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <systemPropertyVariables>
             <hadoop.home>${HADOOP_HOME}</hadoop.home>
             <hadoopsmoke.data>${project.build.directory}</hadoopsmoke.data>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Copy the test artifacts so it is easier to deal with it-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-hadoopsmoke-jar</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.cloudera.itest</groupId>
                  <artifactId>hadoopsmoke</artifactId>
                  <type>test-jar</type>
                  <outputDirectory>${hadoopsmoke.copy}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hadoopsmoke-jar</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.cloudera.itest</groupId>
                  <artifactId>hadoopsmoke</artifactId>
                  <type>test-jar</type>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <includes>**/*</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- This is were actual preparation is started -->
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>check-testslist</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <properties>
                <jar>
                  ${hadoopsmoke.copy}/hadoopsmoke-${hadoopsmoke.ver}-tests.jar
                </jar>
                <destination>${project.build.testOutputDirectory}</destination>
              </properties>
              <source>
                import com.cloudera.itest.*
                JarContent jar = new JarContent();
                def prefix = project.properties['destination'];
                jar.listContent(project.properties['jar']).each {
                TestListUtils.touchTestFiles(prefix, it);
                };
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
