<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
      <groupId>com.cloudera.itest</groupId>
      <artifactId>smoke-tests</artifactId>
      <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cloudera.itest</groupId>
  <artifactId>sqoopsmoke</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>sqoopsmoke</name>

  <properties>
    <org.codehaus.maven-failsafe-plugin.dbhost>localhost</org.codehaus.maven-failsafe-plugin.dbhost>
    <org.codehaus.maven-failsafe-plugin.dbname>db2</org.codehaus.maven-failsafe-plugin.dbname>

    <org.codehaus.groovy.maven.destination>${project.build.testOutputDirectory}</org.codehaus.groovy.maven.destination>
    <org.codehaus.groovy.maven.jar>${project.build.directory}/sqoop-test-1.2.0-SNAPSHOT.jar</org.codehaus.groovy.maven.jar>
    <org.apache.maven-failsafe-plugin.testInclude>**/TestAllTables*</org.apache.maven-failsafe-plugin.testInclude>
    <org.apache.maven-dependency-plugin.groupId>com.cloudera.sqoop</org.apache.maven-dependency-plugin.groupId>
    <org.apache.maven-dependency-plugin.artifactId>sqoop-test</org.apache.maven-dependency-plugin.artifactId>
    <org.apache.maven-dependency-plugin.version>1.2.0-SNAPSHOT</org.apache.maven-dependency-plugin.version>
    <org.apache.maven-dependency-plugin.output>${project.build.directory}</org.apache.maven-dependency-plugin.output>
  </properties>

  <repositories>
    <repository>
      <id>testsnaps</id>
      <name>Test Snapshots</name>
      <url>https://repository.cloudera.com/content/repositories/testsnaps/</url>
    </repository>
    <repository>
      <id>releases</id>
      <name>Cloudera Releases</name>
      <url>https://repository.cloudera.com/content/repositories/releases/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>${org.apache.maven-dependency-plugin.groupId}</groupId>
      <artifactId>${org.apache.maven-dependency-plugin.artifactId}</artifactId>
      <version>${org.apache.maven-dependency-plugin.version}</version>
      <scope>test</scope>
    </dependency>
<!-- FIX ME: Temp. workaround while https://issues.cloudera.org/browse/SQOOP-157-->
    <dependency>
      <groupId>${org.apache.maven-dependency-plugin.groupId}</groupId>
      <artifactId>sqoop</artifactId>
      <version>${org.apache.maven-dependency-plugin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.cloudera.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>0.20.2-737</version>
      <scope>test</scope>
    </dependency>
    <!-- FIX ME: Temp. workaround while https://issues.cloudera.org/browse/DISTRO-44-->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.5.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- FIX ME: Temp. workaround while https://issues.cloudera.org/browse/SQOOP-157-->
    <!-- As the above gets fixed the whole pluginManagement can be removed -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-testartifact-jar</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>copy</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>${org.apache.maven-dependency-plugin.groupId}</groupId>
                    <artifactId>${org.apache.maven-dependency-plugin.artifactId}</artifactId>
                    <type>jar</type>
                    <outputDirectory>${org.apache.maven-dependency-plugin.output}</outputDirectory>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
            <execution>
              <id>unpack-testartifact-jar</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>${org.apache.maven-dependency-plugin.groupId}</groupId>
                    <artifactId>${org.apache.maven-dependency-plugin.artifactId}</artifactId>
                    <version>${org.apache.maven-dependency-plugin.version}</version>
                    <type>jar</type>
                    <outputDirectory>${project.build.directory}
                    </outputDirectory>
                    <includes>foofoofoo</includes>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
          </executions>
         </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.0</version>
        <dependencies>
          <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>run-HSQLDB</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                String cmd =
                  "java -classpath " +
                  com.cloudera.itest.JarContent.getJarURL(org.hsqldb.Server.class).toString() +
                  " org.hsqldb.Server " +
                  " -database.0 file:${basedir}/db/testdb.file -dbname.0 ${org.codehaus.maven-failsafe-plugin.dbname}";
                cmd.execute();
              </source>
            </configuration>
          </execution>
          <execution>
            <id>stop-HSQLDB</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>hsqldb</groupId>
                  <artifactId>hsqldb</artifactId>
                  <version>1.8.0.10</version>
                </element>
              </classpath>
              <source>
                import java.sql.*;

                Class.forName("org.hsqldb.jdbcDriver");
                String url =
                  "jdbc:hsqldb:hsql://${org.codehaus.maven-failsafe-plugin.dbhost}/" +
                  "${org.codehaus.maven-failsafe-plugin.dbname}";
                Connection con = DriverManager.getConnection(url, "sa", "");
                Statement stmt = con.createStatement();
                stmt.executeUpdate("SHUTDOWN");
                stmt.close();
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>HADOOP_CONF_DIR</property>
                  <message>HADOOP_CONF_DIR env. variable has to be set</message>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <forkMode>always</forkMode>
          <argLine>
            -Dhsql.server.host=hsql://${org.codehaus.maven-failsafe-plugin.dbhost} -Dhsql.database.name=${org.codehaus.maven-failsafe-plugin.dbname}
          </argLine>
          <additionalClasspathElements>
            <additionalClasspathElement>
              ${HADOOP_CONF_DIR}
            </additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
